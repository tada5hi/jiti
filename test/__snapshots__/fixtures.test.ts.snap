// Vitest Snapshot v1

exports[`fixtures > async > stdout 1`] = `"works"`;

exports[`fixtures > circular > stdout 1`] = `"FooBar"`;

exports[`fixtures > error-parse > stderr 1`] = `
"<root>/lib/index.js:2
  throw err; /* ↓ Check stack trace ↓ */
  ^

Error: ParseError: \`import\` can only be used in \`import 
 <cwd>/index.ts
    at Object.<anonymous> (<root>/bin/jiti)
    at Module._compile (internal/modules/cjs/loader)
    at Object.Module._extensions..js (internal/modules/cjs/loader)
    at Module.load (internal/modules/cjs/loader)
    at Function.Module._load (internal/modules/cjs/loader)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main)
    at internal/main/run_main_module"
`;

exports[`fixtures > error-parse > stdout 1`] = `""`;

exports[`fixtures > error-runtime > stderr 1`] = `
"<root>/lib/index.js:2
  throw err; /* ↓ Check stack trace ↓ */
  ^

TypeError: The \\"listener\\" argument must be of type function. Received undefined
    at checkListener (events)
    at _addListener (events)
    at process.addListener (events)
    at <cwd>/index.ts
    at jiti (<root>/dist/jiti)
    at Object.<anonymous> (<root>/bin/jiti)
    at Module._compile (internal/modules/cjs/loader)
    at Object.Module._extensions..js (internal/modules/cjs/loader)
    at Module.load (internal/modules/cjs/loader)
    at Function.Module._load (internal/modules/cjs/loader)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main)
    at internal/main/run_main_module {
  code: 'ERR_INVALID_ARG_TYPE'
}"
`;

exports[`fixtures > error-runtime > stdout 1`] = `""`;

exports[`fixtures > esm > stdout 1`] = `
"{ utilsLib: { utils: { a: 'a', default: 'default' }, version: '123' } }
{
  file: '<cwd>/test.js',
  dir: '<cwd>',
  'import.meta.url': 'file://<cwd>/test.js',
  stack: [
    'at getStack (<cwd>/test)',
    'at test (<cwd>/test)',
    'at <cwd>/index.js',
    'at jiti (<root>/dist/jiti)',
    'at Object.<anonymous> (<root>/bin/jiti)',
    'at Module._compile (internal/modules/cjs/loader)',
    'at Object.Module._extensions..js (internal/modules/cjs/loader)',
    'at Module.load (internal/modules/cjs/loader)',
    'at Function.Module._load (internal/modules/cjs/loader)',
    'at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main)',
    'at internal/main/run_main_module'
  ]
}"
`;

exports[`fixtures > exotic > stdout 1`] = `
"Typescript: true
Config: true"
`;

exports[`fixtures > hashbang > stdout 1`] = `"1"`;

exports[`fixtures > import-map > stdout 1`] = `"{ alias: 'alias' }"`;

exports[`fixtures > json > stdout 1`] = `
"Imported : { test: 123 } .default: { test: 123 }
Imported with assertion : { test: 123 } .default: { test: 123 }
Required : { test: 123 } .default: { test: 123 }
Dynamic Imported : { test: 123 } .default: { test: 123 }"
`;

exports[`fixtures > mixed > stdout 1`] = `"Mixed works for: <cwd>"`;

exports[`fixtures > native > stdout 1`] = `"[Module: null prototype] { default: { hasRequire: false } }"`;

exports[`fixtures > proto > stdout 1`] = `"exists: true"`;

exports[`fixtures > pure-esm-dep > stdout 1`] = `
"Enter Program
Enter VariableDeclaration
Enter VariableDeclarator
Enter Identifier
Enter Literal"
`;

exports[`fixtures > syntax > stdout 1`] = `
"Optional chaining: undefined
Nullish coalescing: 0
Logical or assignment: 50 title is empty.
Logical nullish assignment: 50 20"
`;

exports[`fixtures > typescript > stdout 1`] = `
"{
  file: '<cwd>/test.ts',
  dir: '<cwd>',
  resolve: '<cwd>/test.ts'
} undefined"
`;

exports[`fixtures > typescript-metadata > stdout 1`] = `
"Node {
  type: 'ClassProperty',
  start: 328,
  end: 372,
  loc: SourceLocation {
    start: Position { line: 13, column: 2, index: 328 },
    end: Position { line: 14, column: 31, index: 372 },
    filename: undefined,
    identifierName: undefined
  },
  decorators: [
    Node {
      type: 'Decorator',
      start: 328,
      end: 340,
      loc: [SourceLocation],
      expression: [Node],
      leadingComments: undefined,
      innerComments: undefined,
      trailingComments: undefined
    }
  ],
  static: false,
  key: Node {
    type: 'Identifier',
    start: 343,
    end: 351,
    loc: SourceLocation {
      start: [Position],
      end: [Position],
      filename: undefined,
      identifierName: 'property'
    },
    name: 'property',
    leadingComments: undefined,
    innerComments: undefined,
    trailingComments: undefined
  },
  computed: false,
  typeAnnotation: Node {
    type: 'TSTypeAnnotation',
    start: 351,
    end: 371,
    loc: SourceLocation {
      start: [Position],
      end: [Position],
      filename: undefined,
      identifierName: undefined
    },
    typeAnnotation: Node {
      type: 'TSUnionType',
      start: 353,
      end: 371,
      loc: [SourceLocation],
      types: [Array],
      leadingComments: undefined,
      innerComments: undefined,
      trailingComments: undefined
    },
    leadingComments: undefined,
    innerComments: undefined,
    trailingComments: undefined
  },
  value: null,
  leadingComments: undefined,
  innerComments: undefined,
  trailingComments: undefined
} Node {
  type: 'ClassDeclaration',
  start: 313,
  end: 374,
  loc: SourceLocation {
    start: Position { line: 12, column: 7, index: 313 },
    end: Position { line: 15, column: 1, index: 374 },
    filename: undefined,
    identifierName: undefined
  },
  id: Node {
    type: 'Identifier',
    start: 319,
    end: 323,
    loc: SourceLocation {
      start: [Position],
      end: [Position],
      filename: undefined,
      identifierName: 'File'
    },
    name: 'File',
    leadingComments: undefined,
    innerComments: undefined,
    trailingComments: undefined
  },
  superClass: null,
  body: Node {
    type: 'ClassBody',
    start: 324,
    end: 374,
    loc: SourceLocation {
      start: [Position],
      end: [Position],
      filename: undefined,
      identifierName: undefined
    },
    body: [ [Node] ],
    leadingComments: undefined,
    innerComments: undefined,
    trailingComments: undefined
  },
  leadingComments: undefined,
  innerComments: undefined,
  trailingComments: undefined
}
[Function: String]
[class File]"
`;
